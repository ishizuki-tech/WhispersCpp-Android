# ============================================================
# ✅ WhispersCpp-Android — Full CI/CD Automation
# ------------------------------------------------------------
# • Code Review → Build → Release → Pages Deploy
# • Includes QR codes, SHA256 hashes, and release notes
# ============================================================

name: Android CI & Release (Full + QR + Hash + Notes)

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:
    inputs:
      module:
        description: "Android module to build (e.g. app)"
        default: "app"
      create_release:
        description: "Publish GitHub Release with built artifacts"
        type: boolean
        default: true
      ndk_version:
        description: "Android NDK version"
        default: "28.0.12433566"

permissions:
  contents: write
  pull-requests: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  # ============================================================
  # 🧠 Code Review — Lint & Tests
  # ============================================================
  review:
    name: Code Review (Lint & Unit Tests)
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Validate Gradle Wrapper
        uses: gradle/wrapper-validation-action@v2

      - name: Run Lint
        id: lint
        run: ./gradlew lintDebug || true

      - name: Run Unit Tests
        id: test
        run: ./gradlew testDebugUnitTest || true

      - name: Upload Lint Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lint-report
          path: app/build/reports/lint-results.html

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v3
        with:
          header: "🧩 **Code Review Summary**"
          message: |
            ✅ Lint: ${{ steps.lint.outcome }}
            ✅ Unit Tests: ${{ steps.test.outcome }}
            🔗 [CI Logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
            _Automatically generated by CI._

  # ============================================================
  # 🏗️ Build & Release — Signed Artifacts
  # ============================================================
  build:
    name: Build & Release
    runs-on: ubuntu-latest
    needs: review
    timeout-minutes: 70

    env:
      MODULE_PATH: ${{ inputs.module || 'app' }}
      ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
      ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
      ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
      ORG_GRADLE_PROJECT_releaseStorePassword: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
      ORG_GRADLE_PROJECT_releaseKeyAlias: ${{ secrets.ANDROID_KEY_ALIAS }}
      ORG_GRADLE_PROJECT_releaseKeyPassword: ${{ secrets.ANDROID_KEY_PASSWORD }}

    steps:
      - name: Checkout repository (LFS + submodules)
        uses: actions/checkout@v4
        with:
          lfs: true
          fetch-depth: 0
          submodules: recursive

      - name: Verify LFS assets
        run: |
          git lfs ls-files || echo "⚠️ No LFS files found"
          ls -lh app/src/main/assets/models || true

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Install Android SDK & NDK
        uses: android-actions/setup-android@v3
        with:
          ndk-version: ${{ inputs.ndk_version }}

      - name: Install platforms
        run: |
          sdkmanager --install "platforms;android-35" "build-tools;35.0.0"
          yes | sdkmanager --licenses

      - name: Gradle Cache
        uses: gradle/actions/setup-gradle@v3

      - name: Decode keystore
        if: env.ANDROID_KEYSTORE_BASE64 != ''
        run: |
          echo "$ANDROID_KEYSTORE_BASE64" | base64 -d > keystore.jks
          echo "ANDROID_KEYSTORE_FILE=$PWD/keystore.jks" >> $GITHUB_ENV

      - name: Build Release
        run: |
          ./gradlew :${{ env.MODULE_PATH }}:clean :${{ env.MODULE_PATH }}:assembleRelease :${{ env.MODULE_PATH }}:bundleRelease --stacktrace --info

      - name: Collect Outputs
        id: collect
        run: |
          ROOT="${MODULE_PATH}/build/outputs"
          find "$ROOT" -type f \( -name '*.apk' -o -name '*.aab' \) > files.txt
          cat files.txt
          echo "files<<EOF" >> $GITHUB_OUTPUT
          cat files.txt >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: ${{ steps.collect.outputs.files }}
          retention-days: 14

      - name: Extract versionName
        id: version
        run: |
          FILE="${MODULE_PATH}/build.gradle.kts"
          VERSION=$(grep -E 'versionName' "$FILE" | sed -E 's/.*"([^"]+)".*/\1/' | head -n1 || echo "0.0.0")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Tag + Release Notes
        id: release
        run: |
          TS=$(date '+%Y%m%d-%H%M')
          TAG="v${{ steps.version.outputs.version }}-${TS}"
          NOTES=$(git log -10 --pretty='* %s (%an)')
          {
            echo "tag=$TAG"
            echo "body<<EOF"
            echo "## What's Changed"
            echo "$NOTES"
            echo "EOF"
          } >> "$GITHUB_OUTPUT"

      - name: Publish GitHub Release
        if: ${{ inputs.create_release }}
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.release.outputs.tag }}
          name: "WhispersCpp Release ${{ steps.version.outputs.version }}"
          body: ${{ steps.release.outputs.body }}
          files: ${{ steps.collect.outputs.files }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # ============================================================
  # 🌐 GitHub Pages — Downloads Index (QR + Hash + Notes)
  # ============================================================
  pages:
    name: Publish GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: ${{ inputs.create_release }}
    steps:
      - name: Checkout Pages branch
        uses: actions/checkout@v4
        with:
          ref: gh-pages

      - name: Generate index.html (Full QR + Hash + Notes)
        run: |
          mkdir -p downloads/qrs
          NOTES_FILE="downloads/release_notes.txt"
          echo "## What's Changed" > "$NOTES_FILE"
          git log -10 --pretty='* %s (%an)' >> "$NOTES_FILE"

          cat > downloads/index.html <<'HTML'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1" />
            <title>WhispersCpp-Android Downloads</title>
            <style>
              body {
                font-family: 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;
                background: linear-gradient(180deg,#f9fafb 0%,#eef1f4 100%);
                margin:0;padding:2rem;color:#333;
              }
              header{text-align:center;margin-bottom:2rem;}
              h1{color:#1a1a1a;font-size:1.8rem;margin:.2em 0;}
              .subtitle{font-size:.95rem;color:#666;}
              .card{background:#fff;border-radius:12px;
                box-shadow:0 2px 8px rgba(0,0,0,.08);
                padding:1.5rem;margin:1.5rem auto;max-width:760px;}
              .file-entry{display:flex;align-items:center;justify-content:space-between;
                flex-wrap:wrap;padding:.8rem 0;border-bottom:1px solid #eee;}
              .file-info{flex:1;min-width:260px;}
              a.download{text-decoration:none;color:#0078d4;font-weight:500;word-break:break-all;}
              a.download:hover{text-decoration:underline;}
              img.qr{width:100px;height:100px;margin-top:5px;}
              code.hash{font-size:.8rem;color:#555;background:#f1f3f4;
                padding:2px 6px;border-radius:4px;}
              footer{text-align:center;margin-top:3rem;font-size:.85rem;color:#888;}
              pre.notes{white-space:pre-wrap;font-size:.9rem;background:#f7f7f7;
                border-radius:8px;padding:1rem;color:#444;}
            </style>
          </head>
          <body>
            <header>
              <h1>📦 WhispersCpp-Android Downloads</h1>
              <p class="subtitle">Scan QR or click to download</p>
              <p class="subtitle">Generated: $(date '+%Y-%m-%d %H:%M')</p>
            </header>
            <div class="card">
              <h2>Latest Release Files</h2>
          HTML

          for f in $(find ../${{ github.workspace }}/${{ needs.build.outputs.files }} -type f \( -name "*.apk" -o -name "*.aab" \) 2>/dev/null || true); do
            NAME=$(basename "$f")
            SIZE=$(du -h "$f" | cut -f1)
            SHA=$(sha256sum "$f" | cut -d' ' -f1)
            URL="https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/downloads/$NAME"
            QR="https://api.qrserver.com/v1/create-qr-code/?size=100x100&data=$URL"
            cat >> downloads/index.html <<HTML
              <div class="file-entry">
                <div class="file-info">
                  <a class="download" href="$NAME">$NAME</a>
                  <div style="color:#999;">($SIZE)</div>
                  <div><code class="hash">$SHA</code></div>
                </div>
                <img class="qr" src="$QR" alt="QR for $NAME" />
              </div>
            HTML
          done

          cat >> downloads/index.html <<'HTML'
            </div>
            <div class="card">
              <h2>Release Notes</h2>
              <pre class="notes">
          HTML

          cat "$NOTES_FILE" >> downloads/index.html

          cat >> downloads/index.html <<'HTML'
              </pre>
            </div>
            <footer>
              WhispersCpp-Android CI © $(date '+%Y') | Auto-generated by GitHub Actions
            </footer>
          </body>
          </html>
          HTML

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: downloads
          publish_branch: gh-pages
          commit_message: "Auto-update downloads index ($(date '+%Y-%m-%d %H:%M'))"
